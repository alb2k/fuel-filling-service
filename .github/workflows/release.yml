name: Release CI

on: 
  push:
    branches: [ master ]

jobs:
  build_release_jar:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3.1.0

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: 11.x
        distribution: 'adopt'
        
    - name: Cache local Maven repository
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn -B clean package
      
    - name: Upload Build Artifact
      uses: actions/upload-artifact@v2
      with:
        name: jar-with-deps
        path: |
          target/*.jar
          target/libs/*.jar
        if-no-files-found: error
        
    - name: Pack release.zip
      working-directory: target
      run: |
        zip release.zip fuel-filling-service.jar 
        zip -r release.zip libs
      
    - name: Upload Build Artifact release.zip
      uses: actions/upload-artifact@v2
      with:
        name: release.zip
        path: |
          target/release.zip
        if-no-files-found: error
        
    - name: Release - Create Draft for Release
      id: create_draft
      uses: release-drafter/release-drafter@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_draft.outputs.upload_url }} 
        asset_path: ./target/release.zip
        asset_name: release.zip
        asset_content_type: application/octet-stream

  build_publish_docker:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3.1.0
      
    - name: Generate tag vars
      id: tagvars
      run: |
       echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
       echo "::set-output name=build_datetime::$(date -u +%Y%m%d-%H%M)"
      
    - name: Builder Dockerimage and publish to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: alb2k/fuel-filling-service
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "latest,master-${{ steps.tagvars.outputs.sha_short }}-${{ steps.tagvars.outputs.build_datetime }}"

  after_release:
    runs-on: ubuntu-latest
    needs: [build_release_jar]
    steps:
    - uses: actions/checkout@v3.1.0
     
    - name: pull-request
      uses: repo-sync/pull-request@v2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        destination_branch: "develop"
        pr_title: "Sync back"
        pr_body: "An automated PR to sync changes back"
